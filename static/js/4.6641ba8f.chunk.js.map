{"version":3,"sources":["components/SeoHelmet.jsx","helper/ContextType.jsx","data/SeoData.jsx","data/menuNavData.jsx","data/menuData.jsx","components/MenuContentsItem.jsx","components/MenuContents.jsx","pages/Menu.jsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","SeoHelmet","_ref","head","a","createElement","title","name","content","description","property","og","locale","image","url","type","site_name","restaurant","robots","rel","href","canonical","React","createContext","singleItem","currentScrollTop","SeoHeadData","landing","menu","catering","contact","menuNavData","id","data","path","day","largeImage","regularPrice","price","nameDescription","description2","seo","withRouter","props","concat","item","toLowerCase","replace","split","join","react_default","Fragment","className","onClick","array","history","location","pathname","pop","push","e","stopPropagation","titleDesc","src","alt","MenuContents","handleSingleItemClick","_this","context","$","scrollTop","menuHeader","document","getElementsByClassName","this","includes","classList","add","scrollTo","clientHeight","animate","fixed","nextProps","nextState","_this2","dataWithImage","filter","dataWithoutImage","length","map","i","key","onTouchStart","react_router_dom","to","react_router","render","components_MenuContentsItem","style","textAlign","exact","Component","contextType","ContextType","Menu","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleMenuNav","setState","menuNavOffsetTop","menuNav","current","offsetTop","menuNavbar","state","isTouch","createRef","bind","assertThisInitialized","resetTop","remove","_this$props","width","mainNavHeight","fixedStyle","top","isMobile","SeoData","ref","activeClassName","react_transition_group","classNames","timeout","menuData","subject","components_MenuContents","assign","prevState"],"mappings":"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","file":"static/js/4.6641ba8f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst SeoHelmet = ({ head }) => (\r\n  <Helmet>\r\n    <title>{head.title}</title>\r\n    <meta name=\"title\" content={head.title} />\r\n    <meta name=\"description\" content={head.description} />\r\n    <meta property=\"og:locale\" content={head.og.locale} />\r\n    <meta property=\"og:title\" content={head.og.title} />\r\n    {head.og.image && <meta property=\"og:image\" content={head.og.image} />}\r\n    <meta property=\"og:url\" content={head.og.url} />\r\n    <meta property=\"og:description\" content={head.og.description} />\r\n    <meta property=\"og:type\" content={head.og.type} />\r\n    <meta property=\"og:site_name\" content={head.og.site_name} />\r\n    {head.restaurant && (\r\n      <meta property=\"restaurant:restaurant\" content={head.restaurant} />\r\n    )}\r\n    <meta name=\"robots\" content={head.robots} />\r\n    <link rel=\"canonical\" href={head.canonical} />\r\n  </Helmet>\r\n);\r\n\r\nSeoHelmet.propTypes = {\r\n  head: PropTypes.object.isRequired\r\n};\r\n\r\nexport default SeoHelmet;\r\n","import React from 'react';\r\n\r\nexport default React.createContext({\r\n  singleItem: false,\r\n  currentScrollTop: 0\r\n});\r\n","const SeoHeadData = {\r\n  landing: {\r\n    title: 'Seoul Food Take-Out | Korean Food',\r\n    description:\r\n      'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n    robots: 'index, follow',\r\n    canonical: 'https://seoulfoodtakeout.com',\r\n    og: {\r\n      locale: 'en_CA',\r\n      title: 'Seoul Food Take-Out Korean Restaurant',\r\n      image: '',\r\n      url: 'https://seoulfoodtakeout.com',\r\n      description:\r\n        'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n      type: 'website',\r\n      site_name: 'Seoul Food Take-Out'\r\n    }\r\n  },\r\n  menu: {\r\n    title: 'Menu | Seoul Food Take-Out | Korean Food',\r\n    description:\r\n      'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n    robots: 'index, follow',\r\n    canonical: 'https://seoulfoodtakeout.com/menu',\r\n    og: {\r\n      locale: 'en_CA',\r\n      title: 'Menu | Seoul Food Take-Out | Korean Food',\r\n      image: '',\r\n      url: 'https://seoulfoodtakeout.com/menu',\r\n      description:\r\n        'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n      type: 'website',\r\n      site_name: 'Seoul Food Take-Out'\r\n    }\r\n  },\r\n  catering: {\r\n    title: 'Catering | Seoul Food Take-Out | Korean Food',\r\n    description:\r\n      'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n    robots: 'index, follow',\r\n    canonical: 'https://seoulfoodtakeout.com/catering',\r\n    og: {\r\n      locale: 'en_CA',\r\n      title: 'Catering | Seoul Food Take-Out | Korean Food',\r\n      image: '',\r\n      url: 'https://seoulfoodtakeout.com/catering',\r\n      description:\r\n        'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n      type: 'website',\r\n      site_name: 'Seoul Food Take-Out'\r\n    }\r\n  },\r\n  contact: {\r\n    title: 'Contact | Seoul Food Take-Out | Korean Food',\r\n    description:\r\n      'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n    robots: 'index, follow',\r\n    canonical: 'https://seoulfoodtakeout.com/contact',\r\n    og: {\r\n      locale: 'en_CA',\r\n      title: 'Contact | Seoul Food Take-Out | Korean Food',\r\n      image: '',\r\n      url: 'https://seoulfoodtakeout.com/contact',\r\n      description:\r\n        'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n      type: 'website',\r\n      site_name: 'Seoul Food Take-Out'\r\n    }\r\n  }\r\n};\r\n\r\nexport default SeoHeadData;\r\n","const menuNavData = [\r\n  {\r\n    id: 'f68336c7-6606-4672-827a-5ffdc786ea97',\r\n    name: 'Daily Special',\r\n    url: '/menu/daily-special'\r\n  },\r\n  {\r\n    id: 'aec04adb-a9cf-42b2-b562-2424bccd8046',\r\n    name: 'Hot Food',\r\n    url: '/menu/hot-food'\r\n  },\r\n  {\r\n    id: '961847d0-7699-43b2-9ba7-820fb66d2ee0',\r\n    name: 'Wraps & Sandwiches',\r\n    url: '/menu/wraps-and-sandwiches'\r\n  },\r\n  {\r\n    id: 'ab160288-afa1-46fe-a139-041e6b7c9e24',\r\n    name: 'Street Food',\r\n    url: '/menu/street-food'\r\n  },\r\n  {\r\n    id: 'cde27486-e719-402c-99d5-663c1654ca0e',\r\n    name: 'Salad',\r\n    url: '/menu/salad'\r\n  },\r\n  {\r\n    id: '29978d5c-9198-44c7-a23e-4a7051c0f7af',\r\n    name: 'Soup',\r\n    url: '/menu/soup'\r\n  },\r\n  {\r\n    id: 'f5e7ede6-103b-4e9a-a015-cfd69dc20a0b',\r\n    name: 'Beverage',\r\n    url: '/menu/beverage'\r\n  }\r\n];\r\n\r\nexport default menuNavData;\r\n","const data = [\r\n  {\r\n    id: 'a2622dfc-5899-4640-80cb-7409854262e5',\r\n    path: '/menu/daily-special',\r\n    title: 'Daily Special',\r\n    description: '*All daily specials come with daily side dishes & white rice',\r\n    data: [\r\n      {\r\n        id: 'd6cd108c-b69d-493d-b76c-bd311aa9e981',\r\n        name: 'Korean Chicken Curry',\r\n        description:\r\n          '(Korean style curry with chunks of chicken and vegetables)',\r\n        day: 'Monday',\r\n        image: '/images/menu/hot-food/chicken_curry.jpg',\r\n        largeImage: '/images/menu/hot-food/chicken_curry_lg.jpg',\r\n        regularPrice: '$8.85',\r\n        price: 6.65\r\n      },\r\n      {\r\n        id: '0314592a-d95f-476b-a958-aa2693938a3d',\r\n        name: 'Mega Donkatsu',\r\n        description: '(sliced pork cutlet with dontkatsu sauce)',\r\n        image: '/images/menu/hot-food/pork_donkatsu.jpg',\r\n        largeImage: '/images/menu/hot-food/pork_donkatsu_lg.jpg',\r\n        day: 'Tuesday',\r\n        regularPrice: '$8.85',\r\n        price: 7.85\r\n      },\r\n      {\r\n        id: '1a07c361-32e6-4cfd-8f22-3141524c1cd3',\r\n        name: 'Bulgogi',\r\n        description: '(shredded beef marinated in Korean bulgogi sauce)',\r\n        day: 'Wednesday',\r\n        image: '/images/menu/hot-food/bulgogi.jpg',\r\n        largeImage: '/images/menu/hot-food/bulgogi_lg.jpg',\r\n        regularPrice: '$8.85',\r\n        price: 7.85\r\n      },\r\n      {\r\n        id: '77e061a4-aa88-4e03-9b94-90acc89941d0',\r\n        name: 'Korean Spicy Pork',\r\n        nameDescription: '',\r\n        description:\r\n          '(shredded bacon and pork belly marinated in Korean spicy sauce)',\r\n        description2: 'wrap / dinner',\r\n        day: 'Thursday',\r\n        image: '/images/menu/hot-food/spicy_pork.jpg',\r\n        largeImage: '/images/menu/hot-food/spicy_pork_lg.jpg',\r\n        regularPrice: '$7.85',\r\n        price: 6.99\r\n      },\r\n      {\r\n        id: 'fdd6809c-de4b-4542-a2ab-c705f1717c86',\r\n        name: 'Bibimbap',\r\n        description:\r\n          '(rice with sautéed seasoned vegetables and spicy red pepper paste)',\r\n        description2: '- add extra meat for $2.00',\r\n        day: 'Friday',\r\n        image: '/images/menu/hot-food/bibimbap.jpg',\r\n        largeImage: '/images/menu/hot-food/bibimbap_lg.jpg',\r\n        regularPrice: '$7.99',\r\n        price: 6.85\r\n      },\r\n      {\r\n        id: '511e67b0-c79d-40d9-b1b6-c66a110e83cc',\r\n        name: 'Chicken Leg',\r\n        description: '(grilled chicken leg w/ garlic oil sauce)',\r\n        day: '*Everyday',\r\n        image: '/images/menu/hot-food/chicken_leg.jpg',\r\n        largeImage: '/images/menu/hot-food/chicken_leg_lg.jpg',\r\n        regularPrice: '$8.35',\r\n        price: 6.99\r\n      }\r\n    ],\r\n    seo: {\r\n      title: 'Daily Special | Seoul Food Take-Out | Korean Food',\r\n      description:\r\n        'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n      canonical: 'https://seoulfoodtakeout.com/menu/daily-special',\r\n      og: {\r\n        locale: 'en_CA',\r\n        title: 'Seoul Food Take-Out Korean Restaurant',\r\n        image: '',\r\n        url: 'https://seoulfoodtakeout.com/menu/daily-special',\r\n        description:\r\n          'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n        type: 'website',\r\n        site_name: 'Seoul Food Take-Out'\r\n      }\r\n    }\r\n  },\r\n  {\r\n    id: '96b0212a-2aa1-4827-b7d9-c5b3fd0d0554',\r\n    path: '/menu/beverage',\r\n    title: 'Beverage',\r\n    data: [\r\n      {\r\n        id: '14be753e-a50e-4e2d-bd3e-88299aab3a23',\r\n        name: 'Apple Cider',\r\n        nameDescription: '(one size)',\r\n        description: 'hot apple cider w/ Goji Berries',\r\n        image: '/images/menu/beverage/apple_cider.jpg',\r\n        largeImage: '/images/menu/beverage/apple_cider_lg.jpg',\r\n        price: 2.25\r\n      },\r\n      {\r\n        id: 'efe33bf7-5284-4363-8815-6e26712d43a4',\r\n        name: 'Pop, Bottled Water',\r\n        description:\r\n          'Coca Cola(regular, diet, coke zero), Canada Dry, Crush(orange), 7up, Nestea, Arizona(green tea, fruit punch), Gatorades & botted watter',\r\n        image: '/images/menu/beverage/pop_water.jpg',\r\n        largeImage: '/images/menu/beverage/pop_water_lg.jpg',\r\n        price: '1.25 or up'\r\n      }\r\n    ],\r\n    seo: {\r\n      title: 'Beverage | Seoul Food Take-Out | Korean Food',\r\n      description:\r\n        'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n      canonical: 'https://seoulfoodtakeout.com/menu/beverage',\r\n      og: {\r\n        locale: 'en_CA',\r\n        title: 'Seoul Food Take-Out Korean Restaurant',\r\n        image: '',\r\n        url: 'https://seoulfoodtakeout.com/menu/beverage',\r\n        description:\r\n          'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n        type: 'website',\r\n        site_name: 'Seoul Food Take-Out'\r\n      }\r\n    }\r\n  },\r\n  {\r\n    id: '1e6c1ffa-17ef-4b9d-9ad5-2788697c0d9f',\r\n    path: '/menu/hot-food',\r\n    title: 'Hot Food',\r\n    description: '*All hot foods come with daily side dishes & white rice',\r\n    data: [\r\n      {\r\n        id: 'd6cd108c-b69d-493d-b76c-bd311aa9e981',\r\n        name: 'Bulgogi',\r\n        description: '(shredded beef marinated in Korean bulgogi sauce)',\r\n        image: '/images/menu/hot-food/bulgogi.jpg',\r\n        largeImage: '/images/menu/hot-food/bulgogi_lg.jpg',\r\n        price: 8.85\r\n      },\r\n      {\r\n        id: '92c522a8-333d-4a24-9a49-adb3e12f4828',\r\n        name: 'Korean Spicy Pork',\r\n        description:\r\n          '(shredded bacon and pork belly marinated in Korean spicy sauce)',\r\n        description2: 'wrap / dinner',\r\n        image: '/images/menu/hot-food/spicy_pork.jpg',\r\n        largeImage: '/images/menu/hot-food/spicy_pork_lg.jpg',\r\n        price: 7.85\r\n      },\r\n      {\r\n        id: '426551b3-d3fc-42ab-92a9-74abc82e1e34',\r\n        name: 'Korean Spicy Chicken',\r\n        description: '(Chunks of chicken marinated in Korean spicy sauce)',\r\n        image: '/images/menu/hot-food/spicy_chicken.jpg',\r\n        largeImage: '/images/menu/hot-food/spicy_chicken_lg.jpg',\r\n        price: 8.85\r\n      },\r\n      {\r\n        id: '8658ae43-a45c-4741-b4c3-7cfcf3dab525',\r\n        name: 'Chicken Stir Fry',\r\n        description: '(stir fry chicken & vegetables in Teriyaki sauce)',\r\n        day: 'Friday only',\r\n        image: '/images/menu/hot-food/chicken_stir_fry.jpg',\r\n        largeImage: '/images/menu/hot-food/chicken_stir_fry_lg.jpg',\r\n        price: 8.85\r\n      },\r\n      {\r\n        id: '36be65b4-71b2-4bec-aada-6d85c62a95c4',\r\n        name: 'Korean Chicken Curry',\r\n        description:\r\n          '(Korean style curry with chunks of chicken and vegetables)',\r\n        day: 'Monday only',\r\n        image: '/images/menu/hot-food/chicken_curry.jpg',\r\n        largeImage: '/images/menu/hot-food/chicken_curry_lg.jpg',\r\n        price: 8.85\r\n      },\r\n      {\r\n        id: '31694f68-ef3b-4a4f-b43c-36008edfbdda',\r\n        name: 'Mega Donkatsu',\r\n        description: '(sliced pork cutlet with dontkatsu sauce)',\r\n        image: '/images/menu/hot-food/pork_donkatsu.jpg',\r\n        largeImage: '/images/menu/hot-food/pork_donkatsu_lg.jpg',\r\n        price: 8.85\r\n      },\r\n      {\r\n        id: '01a86aeb-ee0a-45e7-b40c-f818c8529f20',\r\n        name: 'Mega Chicken Katsu',\r\n        description: '(sliced chicken cutlet with dontkatsu sauce)',\r\n        image: '/images/menu/hot-food/chicken_katsu.jpg',\r\n        largeImage: '/images/menu/hot-food/chicken_katsu_lg.jpg',\r\n        price: 9.95\r\n      },\r\n      {\r\n        id: '7ce2c5ee-b346-4d0c-9e62-67bb36fa6988',\r\n        name: 'Fish Katsu',\r\n        description: '(breaded basa fillet)',\r\n        day: 'Thursday only',\r\n        image: '/images/menu/hot-food/fish_katsu.jpg',\r\n        largeImage: '/images/menu/hot-food/fish_katsu_lg.jpg',\r\n        price: 7.85\r\n      },\r\n      {\r\n        id: '11c326a5-b057-4f4c-a788-08853b6dbc9c',\r\n        name: 'Yum Yum Fried Chicken',\r\n        description: '(fried boneless chicken in special spicy sauce)',\r\n        day: 'Wednesday only',\r\n        image: '/images/menu/hot-food/yumyum_fried_chicken.jpg',\r\n        largeImage: '/images/menu/hot-food/yumyum_fried_chicken_lg.jpg',\r\n        price: 8.85\r\n      },\r\n      {\r\n        id: '85469afd-8dc3-4a6e-910b-2b925751cee1',\r\n        name: 'Bibimbap',\r\n        description:\r\n          '(rice with sautéed seasoned vegetables and spicy red pepper paste)',\r\n        description2: '- add extra meat for $2.00',\r\n        image: '/images/menu/hot-food/bibimbap.jpg',\r\n        largeImage: '/images/menu/hot-food/bibimbap_lg.jpg',\r\n        price: 7.99\r\n      },\r\n      {\r\n        id: '43a77627-0630-4fe9-9e2d-8b8348cdeccd',\r\n        name: 'Chicken Leg',\r\n        description: '(grilled chicken leg w/ garlic oil sauce)',\r\n        image: '/images/menu/hot-food/chicken_leg.jpg',\r\n        largeImage: '/images/menu/hot-food/chicken_leg_lg.jpg',\r\n        price: 8.35\r\n      },\r\n      {\r\n        id: '16ea4237-1cf2-48bf-8af3-da1881bcaa4d',\r\n        name: 'Kimchi Fried Rice',\r\n        description: '(kimchi fried rice w/ fried egg on top)',\r\n        description2: '- add extra meat for $2.00',\r\n        image: '/images/menu/hot-food/kimchi_fried_rice.jpg',\r\n        largeImage: '/images/menu/hot-food/kimchi_fried_rice_lg.jpg',\r\n        price: 6.99\r\n      },\r\n      {\r\n        id: '0ab078b2-fe12-411c-8e21-f57f8d54c8f8',\r\n        name: 'Meat Bento Box',\r\n        nameDescription: '',\r\n        description: '(1 meat, daily side dishes & rice)',\r\n        image: '/images/menu/hot-food/meat_bentobox.jpg',\r\n        largeImage: '/images/menu/hot-food/meat_bentobox_lg.jpg',\r\n        price: 6.99\r\n      },\r\n      {\r\n        id: '5a0ac429-e5b7-411e-96fd-0ed4f94f0864',\r\n        name: 'Veggie Bento Box',\r\n        nameDescription: '',\r\n        description: '(vegetables, daily side dishes & rice)',\r\n        image: '/images/menu/hot-food/veggie_bentobox.jpg',\r\n        largeImage: '/images/menu/hot-food/veggie_bentobox_lg.jpg',\r\n        price: 6.65\r\n      }\r\n      // {\r\n      //   id: '15937a0d-fbb6-47ee-8a06-c37362505957',\r\n      //   name: 'Chicken Strips',\r\n      //   description: '(breaded chicken strips w/ ketchup or spicy mayo)',\r\n      //   image: '/images/menu/hot-food/chicken_strips.jpg',\r\n      //   largeImage: '/images/menu/hot-food/chicken_strips_lg.jpg',\r\n      //   price: 8.35\r\n      // }\r\n    ],\r\n    seo: {\r\n      title: 'Hot Food | Seoul Food Take-Out | Korean Food',\r\n      description:\r\n        'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n      canonical: 'https://seoulfoodtakeout.com/menu/hot-food',\r\n      og: {\r\n        locale: 'en_CA',\r\n        title: 'Seoul Food Take-Out Korean Restaurant',\r\n        image: '',\r\n        url: 'https://seoulfoodtakeout.com/menu/hot-food',\r\n        description:\r\n          'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n        type: 'website',\r\n        site_name: 'Seoul Food Take-Out'\r\n      }\r\n    }\r\n  },\r\n  {\r\n    id: '18dcdd67-7e74-4c00-8ccf-4b040a0209ca',\r\n    path: '/menu/wraps-and-sandwiches',\r\n    title: 'Wraps & Sandwiches',\r\n    data: [\r\n      {\r\n        id: '86c133d4-81b9-46a4-be06-77d39130f1ab',\r\n        name: 'Steak Sandwich',\r\n        description:\r\n          '(beef, vegetables, provolone cheese & barbeque sauce on an Italian bun)',\r\n        image: '/images/menu/sandwich/steak_sandwich.jpg',\r\n        largeImage: '/images/menu/sandwich/steak_sandwich_lg.jpg',\r\n        price: 6.59\r\n      },\r\n      {\r\n        id: '433e87b2-8cad-44b7-a528-4ebf4b1bad9f',\r\n        name: 'Veggie Delight Wrap',\r\n        description:\r\n          '(avocado, purple cabbage, shredded carrots, lettuce, cucumber, tomato & shredded mozzarella cheese in a wrap)',\r\n        image: '/images/menu/sandwich/veggie_delight.jpg',\r\n        largeImage: '/images/menu/sandwich/veggie_delight_lg.jpg',\r\n        price: 5.25\r\n      },\r\n      {\r\n        id: '9e3f6848-5f81-4854-9ee9-125f1acb7395',\r\n        name: 'Kimchi Bulgogi Wrap',\r\n        description:\r\n          '(kimchi fried rice, bulgogi, assorted vegetables & shredded mozzarella cheese in a wrap)',\r\n        image: '/images/menu/sandwich/kimchi_bulgogi.jpg',\r\n        largeImage: '/images/menu/sandwich/kimchi_bulgogi_lg.jpg',\r\n        price: 8.85\r\n      },\r\n      {\r\n        id: '37b4e72a-f01c-4a99-ae32-61e50db3af23',\r\n        name: 'Kimchi Spicy Pork Wrap',\r\n        description:\r\n          '(kimchi fried rice, Korean spicy pork, assorted vegetables & shredded mozzarella cheese in a wrap',\r\n        image: '/images/menu/sandwich/kimchi_spicy_pork.jpg',\r\n        largeImage: '/images/menu/sandwich/kimchi_spicy_pork_lg.jpg',\r\n        price: 7.85\r\n      },\r\n      {\r\n        id: 'c6058f49-1076-4567-bf15-4a84d0443969',\r\n        name: 'Beef Patty Sandwich',\r\n        description: '(w/ lettuce & tomato)',\r\n        image: '/images/menu/sandwich/beef_patty_sandwich.jpg',\r\n        largeImage: '/images/menu/sandwich/beef_patty_sandwich_lg.jpg',\r\n        price: 3.99\r\n      },\r\n      {\r\n        id: '1c641838-5877-4985-9970-096995d00987',\r\n        name: 'Coco Beef Patty',\r\n        nameDescription: '',\r\n        description: '(beef patty w/ coco bread)',\r\n        image: '/images/menu/sandwich/beef_patty_coco_bread.jpg',\r\n        largeImage: '/images/menu/sandwich/beef_patty_coco_bread_lg.jpg',\r\n        price: 3.15\r\n      }\r\n    ],\r\n    seo: {\r\n      title: 'Wraps & Sandwiches | Seoul Food Take-Out | Korean Food',\r\n      description:\r\n        'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n      canonical: 'https://seoulfoodtakeout.com/menu/wraps-and-sandwiches',\r\n      og: {\r\n        locale: 'en_CA',\r\n        title: 'Seoul Food Take-Out Korean Restaurant',\r\n        image: '',\r\n        url: 'https://seoulfoodtakeout.com/menu/wraps-and-sandwiches',\r\n        description:\r\n          'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n        type: 'website',\r\n        site_name: 'Seoul Food Take-Out'\r\n      }\r\n    }\r\n  },\r\n  {\r\n    id: 'e5001983-718a-4a3f-94f3-8daced27c7c2',\r\n    path: '/menu/salad',\r\n    title: 'Salad',\r\n    data: [\r\n      {\r\n        id: '41673421-0819-4557-84c6-498f1cb83d67',\r\n        name: 'Tofu salad',\r\n        nameDescription: '',\r\n        description: '(sliced soft tofu w/ assorted vegetables)',\r\n        image: '/images/menu/salad/garden_salad.jpg',\r\n        largeImage: '/images/menu/salad/garden_salad_lg.jpg',\r\n        price: 5.99\r\n      },\r\n      {\r\n        id: '4ce70e3b-c64c-498a-8daa-b36b705eacbd',\r\n        name: 'Pasta Salad',\r\n        description: '(pasta, celery, red pepper, olives w/ Italian dressing)',\r\n        image: '/images/menu/salad/pasta_salad.jpg',\r\n        largeImage: '/images/menu/salad/pasta_salad_lg.jpg',\r\n        price: 4.99\r\n      },\r\n      {\r\n        id: '940c321b-c318-4b0d-8472-5b87a7541d2e',\r\n        name: 'Chick Peas Salad',\r\n        description: '(chick peas, parsley, red onion, red pepper)',\r\n        image: '/images/menu/salad/chick_peas_salad.jpg',\r\n        largeImage: '/images/menu/salad/chick_peas_salad_lg.jpg',\r\n        price: 4.99\r\n      },\r\n      {\r\n        id: 'd0cb48c7-c506-4ef4-8587-c5871778c7ed',\r\n        name: 'Fresh Roll',\r\n        description: '(w/ rice paper, cucumber, carrot & avocado)',\r\n        image: '/images/menu/salad/fresh_roll.jpg',\r\n        largeImage: '/images/menu/salad/fresh_roll_lg.jpg',\r\n        price: 4.43\r\n      }\r\n    ],\r\n    seo: {\r\n      title: 'Salad | Seoul Food Take-Out | Korean Food',\r\n      description:\r\n        'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n      canonical: 'https://seoulfoodtakeout.com/menu/salad',\r\n      og: {\r\n        locale: 'en_CA',\r\n        title: 'Seoul Food Take-Out Korean Restaurant',\r\n        image: '',\r\n        url: 'https://seoulfoodtakeout.com/menu/salad',\r\n        description:\r\n          'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n        type: 'website',\r\n        site_name: 'Seoul Food Take-Out'\r\n      }\r\n    }\r\n  },\r\n  {\r\n    id: 'a42018aa-2df2-49f4-9978-10c31c694092',\r\n    path: '/menu/soup',\r\n    title: 'Soup',\r\n    data: [\r\n      {\r\n        id: 'e090cd12-9944-4d32-84a5-0367465415f9',\r\n        name: 'Red Thai Chicken Soup',\r\n        description: '(chicken, assorted vegetables w/ coconut milk)',\r\n        image: '/images/menu/soup/red_thai_chicken_soup.jpg',\r\n        largeImage: '/images/menu/soup/red_thai_chicken_soup_lg.jpg',\r\n        price: 4.43\r\n      },\r\n      {\r\n        id: 'ce1ae195-6cfb-4527-9a9c-004ecab07ea0',\r\n        name: 'Soondubu Soup',\r\n        description: '(soft tofu w/ spicy sauce & vegetable base)',\r\n        image: '/images/menu/soup/soondubu_soup.jpg',\r\n        largeImage: '/images/menu/soup/soondubu_soup_lg.jpg',\r\n        price: 4.43\r\n      },\r\n      {\r\n        id: '89cfd766-b5ee-4cf5-a85a-3cd171bbc6e7',\r\n        name: 'Udon Soup',\r\n        description:\r\n          '(Oriental style thick noodles, crab meat, sliced boiled egg & tempura flakes)',\r\n        description2: '- add extra chicken for $2.00',\r\n        image: '/images/menu/soup/udon.jpg',\r\n        largeImage: '/images/menu/soup/udon_lg.jpg',\r\n        price: 5.25\r\n      },\r\n      {\r\n        id: 'c37ca76c-8ae2-4737-909e-6d30d80fd3d6',\r\n        name: 'Wonton Soup',\r\n        description:\r\n          '(beef wontons, shredded carrots, green onion pieces & sliced fried egg)',\r\n        image: '/images/menu/soup/wonton_soup.jpg',\r\n        largeImage: '/images/menu/soup/wonton_soup_lg.jpg',\r\n        price: 4.43\r\n      }\r\n    ],\r\n    seo: {\r\n      title: 'Soup | Seoul Food Take-Out | Korean Food',\r\n      description:\r\n        'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n      canonical: 'https://seoulfoodtakeout.com/menu/soup',\r\n      og: {\r\n        locale: 'en_CA',\r\n        title: 'Seoul Food Take-Out Korean Restaurant',\r\n        image: '',\r\n        url: 'https://seoulfoodtakeout.com/menu/soup',\r\n        description:\r\n          'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n        type: 'website',\r\n        site_name: 'Seoul Food Take-Out'\r\n      }\r\n    }\r\n  },\r\n  {\r\n    id: 'd1b71ddf-736c-4df5-b13f-23fb0b6b0b39',\r\n    path: '/menu/street-food',\r\n    title: 'Street Food',\r\n    data: [\r\n      {\r\n        id: 'fabcc756-3ce1-44d9-8fd7-2d98a4673d17',\r\n        name: 'Gimbap',\r\n        description: '(Korean maki roll w/ optional spicy mayo)',\r\n        image: '/images/menu/street-food/gimbap.jpg',\r\n        largeImage: '/images/menu/street-food/gimbap_lg.jpg',\r\n        price: 4.43\r\n      },\r\n      {\r\n        id: '88e70052-4ea8-43e8-989a-0a0cc86d4135',\r\n        name: 'Japchae',\r\n        description: '(Korean glass noodle w/ vegetables)',\r\n        image: '/images/menu/street-food/japchae.jpg',\r\n        largeImage: '/images/menu/street-food/japchae_lg.jpg',\r\n        price: 4.43\r\n      },\r\n      {\r\n        id: 'e532ed78-1386-4bfe-ade8-b4b0b1977b4e',\r\n        name: 'Steamed Kimchi Dumpling',\r\n        description:\r\n          '(Oriental style dumpling filled w/ shredded kimchi & vegetables)',\r\n        image: '/images/menu/street-food/steamed_kimchi_dumpling.jpg',\r\n        largeImage: '/images/menu/street-food/steamed_kimchi_dumpling_lg.jpg',\r\n        price: 4.43\r\n      },\r\n      {\r\n        id: '20d40e14-0db7-44fa-9585-5916f6f80c3d',\r\n        name: 'Steamed Beef Dumpling',\r\n        description:\r\n          '(Oriental style dumpling filled w/ shredded beef & vegetables)',\r\n        image: '/images/menu/street-food/steamed_beef_dumpling.jpg',\r\n        largeImage: '/images/menu/street-food/steamed_beef_dumpling_lg.jpg',\r\n        price: 4.43\r\n      },\r\n      {\r\n        id: '5e6324ed-9a1e-4ec7-8b88-1c988c9a90cb',\r\n        name: 'Fried Veggie Dumpling',\r\n        description: '(Oriental style dumbpling filled w/ shredded vegetables)',\r\n        image: '/images/menu/street-food/fried_veggie_dumpling.jpg',\r\n        largeImage: '/images/menu/street-food/fried_veggie_dumpling_lg.jpg',\r\n        price: 4.43\r\n      },\r\n      {\r\n        id: 'f34a5edb-229f-4460-ad4c-e4ab167deb84',\r\n        name: 'Beef or Veggie Patty',\r\n        nameDescription: '',\r\n        description: '(Jamaican style patty filled w/ beef or vegetables)',\r\n        image: '/images/menu/street-food/beef_patty.jpg',\r\n        largeImage: '/images/menu/street-food/beef_patty_lg.jpg',\r\n        price: 2.0\r\n      },\r\n      {\r\n        id: '5a8f3db7-f66b-4017-80ca-bfde154899e5',\r\n        name: 'Chicken Patty',\r\n        description: '(Jamaican style patty filled w/ chicken)',\r\n        image: '/images/menu/street-food/chicken_patty.jpg',\r\n        largeImage: '/images/menu/street-food/chicken_patty_lg.jpg',\r\n        price: 2.25\r\n      },\r\n      {\r\n        id: 'bfbac631-6530-47a1-8169-034430201165',\r\n        name: 'Spring Roll',\r\n        description:\r\n          '(fried shredded vegetables wrapped in a rice flour pancake)',\r\n        image: '/images/menu/street-food/spring_roll.jpg',\r\n        largeImage: '/images/menu/street-food/spring_roll_lg.jpg',\r\n        price: 3.0\r\n      }\r\n    ],\r\n    seo: {\r\n      title: 'Street Food | Seoul Food Take-Out | Korean Food',\r\n      description:\r\n        'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n      canonical: 'https://seoulfoodtakeout.com/menu/street-food',\r\n      og: {\r\n        locale: 'en_CA',\r\n        title: 'Seoul Food Take-Out Korean Restaurant',\r\n        image: '',\r\n        url: 'https://seoulfoodtakeout.com/menu/street-food',\r\n        description:\r\n          'Fresh, authentic Korean food located across Sherbourne station, downtown of Toronto.',\r\n        type: 'website',\r\n        site_name: 'Seoul Food Take-Out'\r\n      }\r\n    }\r\n  }\r\n];\r\n\r\nexport default data;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SeoHelmet from './SeoHelmet';\r\n\r\nconst MenuContentsItem = props => {\r\n  const seo = {\r\n    title: `${props.item.name} | Seoul Food Take-Out | Korean Food`,\r\n    description: `${props.item.description}`,\r\n    canonical: `https://seoulfoodtakeout.com/${props.path}/${props.item.name\r\n      .toLowerCase()\r\n      .replace(',', '')\r\n      .split(' ')\r\n      .join('-')}`,\r\n    og: {\r\n      locale: 'en_CA',\r\n      title: `${props.item.name} | Seoul Food Take-Out | Korean Food`,\r\n      image: `https://seoulfoodtakeout.com${props.item.image}`,\r\n      url: `https://seoulfoodtakeout.com/${props.path}/${props.item.name\r\n        .toLowerCase()\r\n        .replace(',', '')\r\n        .split(' ')\r\n        .join('-')}`,\r\n      description: `${props.item.description}`\r\n    }\r\n  };\r\n  const handleClick = () => {\r\n    // props.history.goBack();\r\n    let array = props.history.location.pathname.split('/');\r\n    array.pop();\r\n    array = array.join('/');\r\n    props.history.push(array);\r\n  };\r\n  return (\r\n    <>\r\n      <SeoHelmet head={seo} />\r\n      <div className=\"popup-box\" onClick={handleClick}>\r\n        <button className=\"close\">\r\n          <i className=\"fas fa-times\" />\r\n        </button>\r\n        <div className=\"contentBox\" onClick={e => e.stopPropagation()}>\r\n          {props.titleDesc && <h5 className=\"titleDesc\">{props.titleDesc}</h5>}\r\n          <h1 className=\"title\">{props.item.name}</h1>\r\n          <div className=\"img-box\">\r\n            <img\r\n              src={props.item.largeImage}\r\n              alt={props.item.name}\r\n              title={props.item.name}\r\n            />\r\n          </div>\r\n          <p className=\"desc\">{props.item.description}</p>\r\n          <span className=\"priceBox\">\r\n            <span className=\"priceDollar\">$</span>\r\n            <span className=\"price\">{props.item.price}</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nMenuContentsItem.propTypes = {\r\n  item: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withRouter(MenuContentsItem);\r\n","import React, { Component } from 'react';\r\nimport { Link, Switch, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport $ from 'jquery';\r\n\r\nimport MenuContentsItem from './MenuContentsItem';\r\nimport ContextType from '../helper/ContextType';\r\nimport SeoHelmet from './SeoHelmet';\r\n\r\nclass MenuContents extends Component {\r\n  static contextType = ContextType;\r\n  static propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    isTouch: PropTypes.bool.isRequired\r\n  };\r\n  componentDidMount() {\r\n    const menuHeader = document.getElementsByClassName('menuHeader');\r\n    // if (this.props.history.location.pathname.includes('menu')) {\r\n    //   document.getElementsByClassName('menuLink')[0].classList.add('active');\r\n    // }\r\n    if (this.props.location.pathname.includes('menu')) {\r\n      document.getElementsByClassName('menuLink')[0].classList.add('active');\r\n    }\r\n    const scrollTo = menuHeader[0].clientHeight - 120;\r\n    if (this.context.singleItem) {\r\n      $('.wrapper').animate({ scrollTop: this.context.currentScrollTop }, 0);\r\n    } else {\r\n      if (this.props.fixed) {\r\n        $('.wrapper').animate({ scrollTop: scrollTo }, 0);\r\n      }\r\n    }\r\n    // if (this.state.subRendered) {\r\n    //   $('.wrapper').animate({ scrollTop: $('.wrapper').scrollTop() }, 0);\r\n    // } else {\r\n    //   if (this.props.fixed) {\r\n    //     $('.wrapper').animate({ scrollTop: scrollTo }, 0);\r\n    //   }\r\n    // }\r\n  }\r\n  // componentWillUnmount() {\r\n  //   if (this.props.location.pathname.includes('menu')) {\r\n  //     document.getElementsByClassName('menuLink')[0].classList.remove('active');\r\n  //   }\r\n  // }\r\n  handleSingleItemClick = e => {\r\n    // this.setState({ subRendered: false });\r\n    this.context.singleItem = true;\r\n    this.context.currentScrollTop = $('.wrapper').scrollTop();\r\n  };\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return false;\r\n    // return nextProps.data !== this.props.data;\r\n  }\r\n  render() {\r\n    const { data } = this.props;\r\n    const dataWithImage = data.data.filter(item => item.image !== '');\r\n    const dataWithoutImage = data.data.filter(item => item.image === '');\r\n    // const seo = {\r\n    //   title: `${props.item.name} | Seoul Food Take-Out | Korean Food`,\r\n    //   description: `${props.item.description}`,\r\n    //   canonical: `https://seoulfoodtakeout.com${props.item.url}`,\r\n    //   og: {\r\n    //     locale: 'en_CA',\r\n    //     title: `${props.item.name} | Seoul Food Take-Out | Korean Food`,\r\n    //     image: `https://seoulfoodtakeout.com${props.item.image}`,\r\n    //     url: `https://seoulfoodtakeout.com${props.item.url}`,\r\n    //     description: `${props.item.description}`\r\n    //   }\r\n    // };\r\n    // console.log(data);\r\n    return (\r\n      <>\r\n        <SeoHelmet head={data.seo} />\r\n        <div className=\"menuContentBox\">\r\n          <h1 className=\"title\">{data.title}</h1>\r\n          <div className=\"cashOnly\">*Sorry, only cash is accepted</div>\r\n          <div className=\"rose-hr-box\">\r\n            <img\r\n              className=\"rose-hr\"\r\n              src=\"/images/rose-hr-260.jpg\"\r\n              alt=\"rose hr\"\r\n            />\r\n          </div>\r\n          {data.description && <p className=\"titleDesc\">{data.description}</p>}\r\n          <div className=\"itemsBox\">\r\n            <div className=\"itemBoxGrid\">\r\n              {dataWithImage.length > 0 &&\r\n                dataWithImage.map((item, i) => (\r\n                  <div\r\n                    className=\"itemBox\"\r\n                    key={item.id}\r\n                    onTouchStart={() => {\r\n                      return true;\r\n                    }}\r\n                  >\r\n                    <div className=\"imageBox\">\r\n                      <Link\r\n                        to={`${data.path}/${item.name\r\n                          .toLowerCase()\r\n                          .replace(',', '')\r\n                          .split(' ')\r\n                          .join('-')}`}\r\n                        onClick={this.handleSingleItemClick}\r\n                      >\r\n                        <img\r\n                          src={item.image}\r\n                          alt={item.name}\r\n                          title={item.name}\r\n                        />\r\n                      </Link>\r\n                      <Switch>\r\n                        <Route\r\n                          key={`${item.id}-${item.name.split(' ').join('')}`}\r\n                          // exact\r\n                          path={`${data.path}/${item.name\r\n                            .toLowerCase()\r\n                            .replace(',', '')\r\n                            .split(' ')\r\n                            .join('-')}`}\r\n                          render={() => (\r\n                            <MenuContentsItem\r\n                              item={item}\r\n                              titleDesc={data.description}\r\n                              path={data.path}\r\n                            />\r\n                          )}\r\n                        />\r\n                        <Route\r\n                          render={() => (\r\n                            <h1 style={{ textAlign: 'center' }}>\r\n                              Oops! That menu item doesn't exist!\r\n                            </h1>\r\n                          )}\r\n                        />\r\n                      </Switch>\r\n                    </div>\r\n\r\n                    <div className=\"contentBox\">\r\n                      <div className=\"name\">\r\n                        {item.name}\r\n\r\n                        {item.nameDescription && (\r\n                          <span className=\"nameDescription\">\r\n                            {item.nameDescription}\r\n                          </span>\r\n                        )}\r\n                        {item.day && <span className=\"day\">{item.day}</span>}\r\n                      </div>\r\n                      {item.description2 && (\r\n                        <div className=\"description2\">{item.description2}</div>\r\n                      )}\r\n                      <div className=\"description\">{item.description}</div>\r\n                      <div className=\"price\">\r\n                        {item.regularPrice && (\r\n                          <>\r\n                            <span className=\"striked\">{item.regularPrice}</span>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                          </>\r\n                        )}\r\n                        {!item.regularPrice && (\r\n                          <span className=\"dollar-sign\">$</span>\r\n                        )}\r\n                        {item.price}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              {dataWithoutImage.length > 0 &&\r\n                dataWithoutImage.map((item, i) => (\r\n                  <div\r\n                    className=\"itemBox\"\r\n                    key={item.id}\r\n                    onTouchStart={() => {\r\n                      return true;\r\n                    }}\r\n                  >\r\n                    <div className=\"imageBox\">\r\n                      <Link\r\n                        to={`${data.path}/${item.name\r\n                          .toLowerCase()\r\n                          .replace(',', '')\r\n                          .split(' ')\r\n                          .join('-')}`}\r\n                      >\r\n                        {/* <img src={item.image} alt={item.name} title={item.name} /> */}\r\n                      </Link>\r\n                      <Switch>\r\n                        <Route\r\n                          key={`${item.id}-${item.name.split(' ').join('')}`}\r\n                          exact\r\n                          path={`${data.path}/${item.name\r\n                            .toLowerCase()\r\n                            .replace(',', '')\r\n                            .split(' ')\r\n                            .join('-')}`}\r\n                          render={() => (\r\n                            <MenuContentsItem item={item} path={data.path} />\r\n                          )}\r\n                        />\r\n                      </Switch>\r\n                    </div>\r\n\r\n                    <div className=\"contentBox\">\r\n                      <div className=\"name\">\r\n                        {item.name}\r\n\r\n                        {item.nameDescription && (\r\n                          <span className=\"nameDescription\">\r\n                            {item.nameDescription}\r\n                          </span>\r\n                        )}\r\n                        {item.day && <span className=\"day\">{item.day}</span>}\r\n                      </div>\r\n                      {item.description2 && (\r\n                        <div className=\"description2\">{item.description2}</div>\r\n                      )}\r\n                      <div className=\"description\">{item.description}</div>\r\n                      <div className=\"price\">\r\n                        {item.regularPrice && (\r\n                          <>\r\n                            <span className=\"striked\">{item.regularPrice}</span>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                          </>\r\n                        )}\r\n                        {!item.regularPrice && (\r\n                          <span className=\"dollar-sign\">$</span>\r\n                        )}\r\n                        {item.price}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div>\r\n          {Array.apply(null, Array(50)).map((item, i) => (\r\n            <h1 key={i}>Test</h1>\r\n          ))}\r\n        </div> */}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuContents;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink, Route, Switch } from 'react-router-dom';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nimport menuNavData from '../data/menuNavData';\r\nimport menuData from '../data/menuData';\r\nimport MenuContents from '../components/MenuContents';\r\nimport ContextType from '../helper/ContextType';\r\nimport SeoHelmet from '../components/SeoHelmet';\r\nimport SeoData from '../data/SeoData';\r\n\r\nclass Menu extends Component {\r\n  static contextType = ContextType;\r\n  static propTypes = {\r\n    width: PropTypes.number.isRequired,\r\n    fixed: PropTypes.bool.isRequired\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isTouch: false\r\n    };\r\n    this.menuNav = React.createRef();\r\n    this.handleMenuNav = this.handleMenuNav.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.resetTop(false);\r\n    this.props.scrollTop();\r\n    this.handleMenuNav();\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.props.location.pathname.includes('menu')) {\r\n      document.getElementsByClassName('menuLink')[0].classList.remove('active');\r\n    }\r\n  }\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    return false;\r\n  }\r\n\r\n  handleMenuNav = () => {\r\n    this.setState({ fixed: false });\r\n    const menuNavOffsetTop = this.menuNav.current.offsetTop;\r\n    this.props.menuNavbar(menuNavOffsetTop);\r\n  };\r\n\r\n  render() {\r\n    const { fixed, width } = this.props;\r\n\r\n    const { mainNavHeight } = this.props;\r\n    const { isTouch } = this.state;\r\n\r\n    const style = {\r\n      width: isTouch ? '100%' : `${width}px`\r\n    };\r\n    const fixedStyle = {\r\n      width: isTouch ? '100%' : `${width}px`,\r\n      top: mainNavHeight\r\n    };\r\n    const isMobile = width < 768 ? true : false;\r\n\r\n    return (\r\n      <>\r\n        <SeoHelmet head={SeoData.menu} />\r\n        <div className=\"header menuHeader\">\r\n          <h2>Authentic Home Style Korean Food Made To Go</h2>\r\n          <nav\r\n            ref={this.menuNav}\r\n            style={fixed ? fixedStyle : style}\r\n            className={'menuNav ' + (fixed ? 'fixed ' : '')}\r\n          >\r\n            <div className=\"seoulContainer slider-wrapper\">\r\n              <div className={'slider-inner'}>\r\n                <ul className={'slider ' + (!isMobile ? 'center ' : '')}>\r\n                  {menuNavData.map((item, i) => (\r\n                    <li key={i}>\r\n                      <NavLink\r\n                        exact\r\n                        to={item.url}\r\n                        activeClassName=\"menu-nav-active\"\r\n                        key={item.id}\r\n                        onClick={() => (this.context.singleItem = false)}\r\n                      >\r\n                        {item.name}\r\n                      </NavLink>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n        <div className=\"fullWidthContainer\">\r\n          <div className=\"seoulContainer-m menu-container\">\r\n            <Route\r\n              render={({ location }) => (\r\n                <div className=\"menuRouteAnimation\">\r\n                  <TransitionGroup>\r\n                    <CSSTransition\r\n                      // unmountOnExit\r\n                      classNames=\"fade\"\r\n                      key={location.key}\r\n                      timeout={300}\r\n                      // timeout={{ enter: 400, exit: 400 }}\r\n                    >\r\n                      <Switch location={location}>\r\n                        {menuData.map((subject, i) => (\r\n                          <Route\r\n                            key={`${subject.path}`}\r\n                            // exact\r\n                            path={subject.path}\r\n                            render={props => (\r\n                              <MenuContents\r\n                                key={subject.id}\r\n                                path={subject.path}\r\n                                data={subject}\r\n                                fixed={fixed}\r\n                                isTouch={isTouch}\r\n                                isMobile={width < 1024}\r\n                                {...props}\r\n                              />\r\n                            )}\r\n                          />\r\n                        ))}\r\n                        <Route\r\n                          render={() => (\r\n                            <h1 style={{ textAlign: 'center' }}>\r\n                              Oops! That Menu Is Not Found!\r\n                            </h1>\r\n                          )}\r\n                        />\r\n                      </Switch>\r\n                    </CSSTransition>\r\n                  </TransitionGroup>\r\n                </div>\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* <div>\r\n          {Array.apply(null, Array(50)).map((item, i) => (\r\n            <h1 key={i}>Test</h1>\r\n          ))}\r\n        </div> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n"],"sourceRoot":""}